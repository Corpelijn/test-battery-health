//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ultimo_test.Ultimo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectorErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Ultimo.Web.SiteRoot.WebServices")]
    [System.SerializableAttribute()]
    public partial class ConnectorErrorMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Ultimo.SoapConnector")]
    public interface SoapConnector {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SoapConnector/ExportData", ReplyAction="http://tempuri.org/SoapConnector/ExportDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ultimo_test.Ultimo.ConnectorErrorMessage), Action="http://tempuri.org/SoapConnector/ExportDataConnectorErrorMessageFault", Name="ConnectorErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Ultimo.Web.SiteRoot.WebServices")]
        string ExportData(string exportName, string userName, string password, string requestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SoapConnector/ExportData", ReplyAction="http://tempuri.org/SoapConnector/ExportDataResponse")]
        System.Threading.Tasks.Task<string> ExportDataAsync(string exportName, string userName, string password, string requestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SoapConnector/ImportData", ReplyAction="http://tempuri.org/SoapConnector/ImportDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ultimo_test.Ultimo.ConnectorErrorMessage), Action="http://tempuri.org/SoapConnector/ImportDataConnectorErrorMessageFault", Name="ConnectorErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Ultimo.Web.SiteRoot.WebServices")]
        string ImportData(string importName, string userName, string password, [System.ServiceModel.MessageParameterAttribute(Name="importData")] string importData1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SoapConnector/ImportData", ReplyAction="http://tempuri.org/SoapConnector/ImportDataResponse")]
        System.Threading.Tasks.Task<string> ImportDataAsync(string importName, string userName, string password, string importData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SoapConnectorChannel : Ultimo_test.Ultimo.SoapConnector, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapConnectorClient : System.ServiceModel.ClientBase<Ultimo_test.Ultimo.SoapConnector>, Ultimo_test.Ultimo.SoapConnector {
        
        public SoapConnectorClient() {
        }
        
        public SoapConnectorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapConnectorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapConnectorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapConnectorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ExportData(string exportName, string userName, string password, string requestData) {
            return base.Channel.ExportData(exportName, userName, password, requestData);
        }
        
        public System.Threading.Tasks.Task<string> ExportDataAsync(string exportName, string userName, string password, string requestData) {
            return base.Channel.ExportDataAsync(exportName, userName, password, requestData);
        }
        
        public string ImportData(string importName, string userName, string password, string importData1) {
            return base.Channel.ImportData(importName, userName, password, importData1);
        }
        
        public System.Threading.Tasks.Task<string> ImportDataAsync(string importName, string userName, string password, string importData) {
            return base.Channel.ImportDataAsync(importName, userName, password, importData);
        }
    }
}
